var cube = require('cube-js');
var log  = require('loglevel');

var LocalCache = function() {
};

cube.mix(LocalCache, {
  set: function(key, value, ttl) {
    log.debug('LocalCache::set', key, value);
    var data = {};
    data[key] = {
      ctime: Date.now(),
      ttl: ttl,
      value: value
    };
    chrome.storage.local.set(data);
  },

  get: function(key, done) {

    chrome.storage.local.get(key, function(data) {
      log.debug('LocalCache::get', key, data);
      if (data && data[key]) {
        var rawData = data[key];

        var value = rawData['value'];
        var ttl = rawData['ttl'];
        if (ttl && (Date.now() - rawData['ctime'] > ttl)) {
          value = null;
        }
        done(value);
      } else {
        done(null);
      }
    });
  },
});

var PrefixLocalCache = function(prefix) {
  this.prefix = prefix;
};


cube.mix(PrefixLocalCache.prototype, {
  setPrefix: function(prefix) {
    this.prefix = prefix;
  },

  set: function(key, value, ttl) {
    if (!this.prefix) {
      throw new Error('prefix is empty');
    }
    key = this.prefix + '_' + key;
    LocalCache.set(key, value, ttl);
  },

  get: function(key, done) {
    if (!this.prefix) {
      throw new Error('prefix is empty');
    }
    key = this.prefix + '_' + key;
    LocalCache.get(key, done);
  }
});

module.exports.LocalCache = LocalCache;
module.exports.PrefixLocalCache = PrefixLocalCache;
